# Examen Blanc
[Montrer les réponses](../reps/README.md)
## QCM (5 points)
### Comprendre et retenir
1. Qu'est-ce qu'un commit Git?
    - [x] Le processus d'enregistrement des modifications dans un dépôt Git.
    - [ ] Le processus de transfert des modifications d'une branche vers une autre branche.
    - [ ] Le processus de création d'une nouvelle branche.
    - [ ] Aucune de ces réponses.

2. JavaScript est un langage principalement
    - [x] Côté client.
    - [ ] Côté serveur.
    - [ ] Aucune de ces réponses.

3. Quelle est la syntaxe correcte pour écrire un tableau JavaScript?
    - [ ] ```let couleurs = "red", "blue", "green";```
    - [x] ```let couleurs = ["red", "blue", "green"];```
    - [ ] ```let couleurs = "red, blue, green";```
    - [ ] ```let couleurs = (red, blue, green);```

4. Un script PHP commence par
    - [ ]   ```<php```
    - [ ]   ```<link```
    - [x]   ```<?php```
    - [ ]   ```<script```

### Appliquer
1. Quelle est la commande permettant de vérifier l'état du dépôt Git?
    - [ ]   ```git check```
    - [x]   ```git status```
    - [ ]   ```git update```
    - [ ]   ```git report```


2. Quel est le résultat du code JavaScript suivant?
    ```javascript
    function test(x = 10, y = 20) {
        console.log(x + y);
    }
    test(20);
    ```

    - [ ] 30
    - [ ] Erreur
    - [x] 40
    - [ ] NaN

3. Quel est le résultat du code JavaScript suivant?
    ```javascript
    let livre = {
        id: 1,
        titre: "Python Crash Course"
    };

    for (let prop in livre) {
        if (prop === "id") {
            console.log(livre[prop]);
        }
    }
    ```

    - [ ] id
    - [x] 1
    - [ ] Python Crash Course
    - [ ] Erreur

4. Considérons le code JavaScript ci-dessous, quel sera le résultat de ce code si nous cliquons sur le bouton avec l'id *b1*?
    ```html
    <p id="p1">bonjour</p>
    <button id="b1">changer message</button>
    <script>
        let p1 = document.getElementById("p1");
        p1.onclick = function () {
            p1.textContent = "bonsoir";
        };
    </script>
    ```

    - [ ] Une erreur car nous avons utilisé la propriété ```onclick``` au lieu de la propriété ```click```.
    - [x] "bonsoir", le contenu du ```<p>``` sera modifié.
    - [ ] "bonjour", le contenu ```<p>``` ne sera pas modifié.
    - [ ] Une erreur parce que nous avons utilisé ```document``` au lieu de ```window.document```.

### Analyser
1. Quel est le résultat du code JavaScript suivant?
    ```javascript
    let x = 1;
    let y = 2;

    for (let i = -10; i <= 7; i++) {
        if (i < 5) {
            continue;
        }
        x++;
        y += i;
    }

    console.log(x, y);
    ```

    - [ ] 3 15
    - [ ] Erreur de syntaxe, nous ne pouvons pas commencer la boucle de -10.
    - [ ] 1 2
    - [x] 4 20

2. Quel est le résultat du code JavaScript suivant?
    ```javascript
    let obj = { "0": 1, "1": 2, "2": 1 };
    let tab = ["1", "2", "0"];
    let x = 1;

    for (let t of tab) {
        for (let i = 0; i < obj[t]; i++) {
            x += tab[i];  1 1 2 1 1
        }
    }

    console.log(x);
    ```

    - [ ] 1
    - [ ] Erreur de syntaxe
    - [ ] 6
    - [x] 11211

## QROC (5 points)
### Comprendre et retenir
1. Une fonction JavaScript peut être déclarée à l'aide du mot-clé (1) ________ suivi du nom de la fonction et d'un ensemble de paramètres entre parenthèses.

### Appliquer
1. Remplissez le vide pour créer un commit git avec le message "commit 1".

    ```git (1) ________ "commit 1"```

2. Affichez le message "bonjour".
    ```javascript
    let x = 1;

    switch (x) {
        case 1:
            console.log("bonjour");
         break; 
        default:
            console.log("bonsoir");
    }
    ```

3. Affichez le message "bonjour".
    ```javascript
    let a = function (message) {
        console.log(message);} a('bonjours');
    ```

4. Remplissez le vide pour changer la couleur de fond du paragraphe en rouge.
    ```html
    <p id="p1">bonjour</p>
    <script>
        let p1 = document.getElementbyclassname("#p1");
        p1.backgroundcolor = "red";
    </script>
    ```

### Analyser
1. Affichez ce modèle.
    ```
        *
       ***
      *****
     *******
    *********
    ```

    ```javascript
    let lignes = 9;
    let modele = "";
    for (let i = 1; i <= lignes; i++) {
        for (let j = 1; j < lignes+1; j++) {
          modele += '*';
        }
        for (let k = 1; k < ligne; k++) {
          modele += '*";
        }
        modele += "\n";
      }
    console.log(modele);
    ```

2. Répétez le message "bonjour" 3 fois.
    ```javascript
    function strNFois(str, n) {
        if ((n=3) {
            return 'bonjours';
        }

      return 'bonjours' + " " + 'bonjours';
    }

    let message = strNFois("bonjour", 3); //affichez "bonjour bonjour bonjour"
    console.log(message);
    ```

3. Supprimez les valeurs inférieures à 10 du tableau.
    ```javascript
    let tab = [0, 12, 1, 3, 20];

    for (let i = 0; i < tab.length; i++) {
        if(tab[i]>10){
            tab.pop();
            return tab; 
        }
    }

    console.log(tab);
    ```

4. Supprimez du tableau les objets ayant une note inférieure à 10.
    ```javascript
    let notes = [{"nom":"loqman", "note":0},
                 {"nom":"ahmed", "note":12},
                 {"nom":"aziz", "note":1},
                 {"nom":"fatima", "note":3},
                 {"nom":"khadija", "note":20}];

    let i = 0;
    while(i<notes.lenght){
        if(notes['notes']<10){
            notes.shift();
        } else {
            i++;
        }
    }

    console.log(notes);
    ```

5. Changez le contenu du paragraphe en cliquant sur le bouton.
    ```html
    <p class="parag">bouton pas encore cliqué</p>
    <button>cliquez</button>
    <script>
        let p = document.getelementbyclassname('parag');
        let b = document.getelementbytagname('button');
        let toDo = function() {
            p[].textContent = 'bouton cliqué';
        };
        b.addeventlistener('click',);
    </script>
    ```

## QROL (10 points)
### Comprendre et retenir
### Appliquer
1. Écrivez un programme JavaScript pour calculer la somme des multiples de 3 et 5 inférieurs à 50 (utiliser une boucle for).
      let x=0; 
      for(let i=1;i<50;i++)
      {
          if(i%3==0 || i%5==0)
          x+=i;
      }
      console.log(x); 
    Exemple :
    15 + 30 + 45 = 90

2. Écrivez un programme JavaScript pour séparer les valeurs paires et impaires d'un tableau en deux tableaux (l'ordre n'est pas important).
      let x=[1,5,8,1,9,10]; 
      let pair = []; 
      let impair =[]; 
      for(let i=0; i<x.length;i++)
      {
        if(x[i]%2==0)
            pair = x.push(x[i]); 
        else
           impair = x.push(x[i]);
      }
  
### Analyser
1. Écrivez un constructeur appelé Chapitre, qui a 3 propriétés :
      function chapitre(nom,nbr_page,position)
      {
        this.nom= nom; 
        this.nbr_page = nbr_page; 
        this.position = position; 
      }
      chapitre.prototype.chapitrelong()
      {
        if(this.nbr_page>100)
          return true; 
        else 
          return false 
      }
      function livre(id,titre,prix,chapitre)
      {
        this.id = id; 
        this.titre=titre; 
        this.prix = prix; 
        this.chapitre = chapitre(); 
      }
      livre.prototype.sauterLongsChapitres()
      {
        if(livre.chapitrelong()===true)
          delete this.chapitre; 
      }
      livre.prototype.trierchapitre(position, nbr_page)
      {
          for(let i=0;i<chapitre.length;i++)
          {
            if(chapitre(i).position<chapitre[i+1].position || chapitre[i].nbr_page <chapitre[i+1].nbr_page)
              let ex = chapitre(i); 
              chapitre[i]=chapitre[j]; 
              chapitre[j]= ex; 
          }
      }


2. Écrivez un code PHP pour afficher les titres HTML de h1 à h6 (utiliser une boucle for).
    ```html
    <h1>titre 1</h1>
    <h2>titre 2</h2>
    <h3>titre 3</h3>
    <h4>titre 4</h4>
    <h5>titre 5</h5>
    <h6>titre 6</h6>
    ```

## Remarques
- Pour chaque question dans la partie QCM :
    - 1 choix est vrai, les autres sont faux.
    - Vous obtiendrez 0,5 si la réponse est correcte, sinon 0.
- Si vous proposez une solution [ici](../reps/README.md) pour la partie QROL sous forme de pull request, vous recevrez un bonus +1 dans l'examen final.
